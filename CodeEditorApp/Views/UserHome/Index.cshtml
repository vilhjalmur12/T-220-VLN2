@using CodeEditorApp.Models.ViewModels
@model CodeEditorApp.Models.ViewModels.UserViewModel

@{
    Layout = "~/Views/UserHome/_Layout.cshtml";
    ViewBag.Title = "UserHomePage";
    ProjectViewModel NewProject = ViewBag.NewProject;
}
<body>
    <!--UserHome body starts-->
    <div class="row container padding-for-container userhome-body">
        <div class="col-md-2 document-list">
            @if (Model.RootFolder.Folders == null)
            {
                <p>Database is empty</p>
            }
            else
            {
                <ul id="tree2">
                    @foreach (CodeEditorApp.Models.ViewModels.FolderViewModel item in Model.RootFolder.Folders)
                    {
                        <li>
                            @if (item.IsSolutionFolder)
                            {
                                @Html.ActionLink(item.Name, "OpenProject", new { projectID = @item.ProjectID })
                            }
                            else
                            {
                                <a href="#">@item.Name</a>
                            }

                            @ShowSubItems(item.SubFolders);

                        </li>
                    }
                </ul>
            }

            @helper ShowSubItems(List<CodeEditorApp.Models.ViewModels.FolderViewModel> folders)
            { 
                <ul>
                    @foreach (CodeEditorApp.Models.ViewModels.FolderViewModel item in folders)
                    {
                        <li>
                            @if (item.IsSolutionFolder)
                            {
                                @Html.ActionLink(item.Name, "../UserHome/OpenProject", new { projectID = @item.ProjectID })
                            }
                            else
                            {
                                @item.Name
                            }

                            @ShowSubItems(item.SubFolders)

                            @if (item.Files != null)
                            {
                                <ul>
                                    @foreach (CodeEditorApp.Models.ViewModels.FileViewModel file in item.Files)
                                    {
                                        <li>@file.name</li>
                                    }
                                </ul>
                            }
                        </li>
                    }
                </ul>
            }
        </div>
        <div class="col-md-9 project-table">
            <!-- Responsive table starts here -->
            <div class="table-responsive-vertical shadow-z-1">
                <!-- Table starts here -->
                <table id="table" class="table table-hover table-responsive">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Owner</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Projects)
                        {
                            <tr>
                                <td data-title="ID">1</td>
                                <td data-title="name-of-project">@Html.ActionLink(@item.name, "../UserHome/OpenProject", new { projectID = @item.ID })</td>
                                <td data-title="project-owner">Jack Daniels</td>
                            </tr>
                        }                      
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-md-1 add-project">
            <!-- Hér er CreateProject aðgerð -->
            <!-- Trigger the modal with a button -->
            <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">
                <i class="indicator glyphicon glyphicon-plus-sign"></i>
            </button>

            <!-- Modal -->
            <div id="myModal" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Modal Header</h4>
                        </div>
                        <div class="modal-body">
                            @{Html.RenderPartial("CreateProject", NewProject);}
                        </div>
                        <div class="modal-footer">
                            <button type = "button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!--UserHome body ends-->
    <script>
            $.fn.extend({
            treed: function(o)
            {

                var openedClass = 'glyphicon-minus-sign';
                var closedClass = 'glyphicon-plus-sign';

                if (typeof o != 'undefined')
                {
                    if (typeof o.openedClass != 'undefined')
                    {
                        openedClass = o.openedClass;
                    }
                    if (typeof o.closedClass != 'undefined')
                    {
                        closedClass = o.closedClass;
                    }
                }

                //initialize each of the top levels
                var tree = $(this);
                tree.addClass("tree");
                tree.find('li').has("ul").each(function ()
                {
                    var branch = $(this); //li with children ul
                    branch.prepend("<i class='indicator glyphicon " + closedClass + "'></i>");
                    branch.addClass('branch');
                    branch.on('click', function (e)
                    {
                        if (this == e.target)
                        {
                            var icon = $(this).children('i:first');
                            icon.toggleClass(openedClass + " " + closedClass);
                            $(this).children().children().toggle();
                        }
                    })
                    branch.children().children().toggle();
                });
                //fire event from the dynamically added icon
                tree.find('.branch .indicator').each(function ()
                {
                    $(this).on('click', function() {
                    $(this).closest('li').click();
                });
            });
            }
        });

        //Initialization of treeviews
        $('#tree1').treed();
        $('#tree2').treed({ openedClass: 'glyphicon-folder-open', closedClass: 'glyphicon-folder-close'});
        $('#tree3').treed({ openedClass: 'glyphicon-chevron-right', closedClass: 'glyphicon-chevron-down'});
    </script>
</body>