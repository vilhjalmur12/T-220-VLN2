@using CodeEditorApp.Models.ViewModels
@model CodeEditorApp.Models.ViewModels.UserViewModel

@{
    Layout = "~/Views/UserHome/_Layout.cshtml";
    ViewBag.Title = "UserHomePage";
    ProjectViewModel NewProject = ViewBag.NewProject;
}
<script src="https://use.fontawesome.com/3e0cecfe87.js"></script>
<body>
    <!--UserHome body starts-->
    <div class="row container padding-for-container userhome-body ">
        <div class="col-md-2 project-list box-container scroll">
            <div class="document-list-icons">
                <!-- Create folder -->
                <span class="clickable-icon"><i data-toggle="modal" data-target="#myModal" class="glyphicon glyphicon-folder-close fa-2x" aria-hidden="true"><span class="hover-text">Create new folder</span></i></span>
                <!-- Move folder -->
                <span class="clickable-icon"><i data-toggle="modal" data-target="#myModal" class="fa fa-arrows fa-2x" aria-hidden="true"><span class="hover-text">Move folder</span></i></span>
                <!-- Trash -->
                <span id="delete-item-button" class="clickable-icon"><i class="glyphicon glyphicon-trash fa-2x" aria-hidden="true"><span class="hover-text">Delete</span></i></span>
            </div>
                <!--Project folders and file tree starts-->
                @if (Model.RootFolder.Folders == null)
                {
                        <p>Database is empty</p>
                }
                else
                {
                    <ul id="tree2">
                        @foreach (CodeEditorApp.Models.ViewModels.FolderViewModel folder in Model.RootFolder.Folders)
                        {
                            <li>
                                <!--If the folder represents a project, create link project-->
                                @if (folder.IsSolutionFolder)
                                {
                                    @Html.ActionLink(folder.Name, "Index", "Project", new { projectID = @folder.ProjectID }, null)
                                }
                                else
                                {
                                    <a href="#">@folder.Name</a>
                                }

                                @ShowSubItems(folder.SubFolders)

                            </li>
                        }
                    </ul>
                }

                @helper ShowSubItems(List<CodeEditorApp.Models.ViewModels.FolderViewModel> folders)
                {
                    <ul>
                        @foreach (CodeEditorApp.Models.ViewModels.FolderViewModel folder in folders)
                        {
                            <li class="clickable-icon">
                                <!--If the folder represents a project, create link to project-->
                                @if (folder.IsSolutionFolder)
                                {
                                    @Html.ActionLink(folder.Name, "Index", "Project", new { projectID = @folder.ProjectID }, null)
                                }
                                else
                                {
                                    @folder.Name
                                }

                                @ShowSubItems(folder.SubFolders)

                                @if (folder.Files != null)
                                {
                                    <ul>
                                        @foreach (CodeEditorApp.Models.ViewModels.FileViewModel file in folder.Files)
                                        {
                                            <li class="clickable-icon" id="file-item" alt="@file.ID">
                                                <a>@file.Name@*@file.FileType.Extension</a>*@</a>
                                            </li>
                                        }
                                    </ul>
                                }
                            </li>
                        }
                    </ul>
                }
                    <!--Project folders and file tree ends-->
        </div>

        <div class="col-md-9 project-table box-container scroll">
            <!-- Responsive table starts here -->
            <div class="table-responsive-vertical shadow-z-1">
                <!-- Table starts here -->
                <table id="table" class="table table-hover table-responsive">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Owner</th>
                        </tr>
                    </thead>
                    <tbody id="project-table-home">
                        @foreach (var item in Model.Projects)
                        {
                            <tr alt="@item.ID">
                                <td data-title="name-of-project">@Html.ActionLink(@item.Name, "Index", "Project", new { projectID = @item.ID }, null)</td>
                                <td data-title="project-owner">@item.Owner</td>
                            </tr>
                        }                      
                    </tbody>
                </table>
            </div>
        </div>


        <!-- Hér er CreateProject aðgerð -->
        <div class="col-md-1 add-project box-container">
            <!-- Trigger the modal with a button -->    
            <span class="clickable-icon"><i data-toggle="modal" data-target="#myModal" class="glyphicon glyphicon-plus fa-3x" aria-hidden="true"></i></span>
            <!-- Modal -->
            <div id="myModal" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header light-background">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title color-textcolor">Create new project</h4>
                        </div>
                        <div class="modal-body">
                            @{Html.RenderPartial("CreateProject", NewProject);}*
                        </div>
                        <div class="modal-footer">
                            <button type = "button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        /*þarf að færa*/
        var documentID = 0;
        var folderID = 0;


        function DeleteFile () {
            $.ajax({
                url: "/UserHome/DeleteFileJSON",
                method: "POST",
                data: { fileID : documentID },
                dataType: "json", 
                success: function () {
    
                }
            })
        }

        function openNav(name) {
            document.getElementById(name).style.width = "500px";/* Set the width of the side navigation to 250px */
            if (name != "project-chat") {
                closeNav("project-chat");
            }
            if (name != "project-members") {
                closeNav("project-members");
            }
            if (name != "project-goals") {
                closeNav("project-goals");
            }
        }

        /* Set the width of the side navigation to 0 */
        function closeNav(name) {
            document.getElementById(name).style.width = "0";
        }

        function closeAllNavs() {
            closeNav("project-chat");
            closeNav("project-members");
            closeNav("project-goals");
        }

        function ChangeGoal(goalID) {

            $.ajax({
                type: 'POST',
                url: '/Project/ChangeGoal', //can I send data to multiple url with same ajax call.
                data: {
                    goalID: goalID,
                },
                success: function (data) {
                    $(".error_msg").text(data);
                }
            });
        }

        function ChangeObjective(objectiveID) {

            $.ajax({
                type: 'POST',
                url: '/Project/ChangeObjective', //can I send data to multiple url with same ajax call.
                data: {
                    objectvieID: objectiveID,
                },
                success: function (data) {
                    $(".error_msg").text(data);
                }
            });
        }

        function NewObjective(goalID, name, projectID) {

            $.ajax({
                type: 'POST',
                url: '/Project/NewObjective', //can I send data to multiple url with same ajax call.
                data: {
                    goalID: ID,
                    name: name,
                    projectID: projectID
                },
                success: function (data) {
                    $(".error_msg").text(data);
                }
            });
        }

        $.fn.extend({
            treed: function (o) {

                var openedClass = 'glyphicon-minus-sign';
                var closedClass = 'glyphicon-plus-sign';

                if (typeof o != 'undefined') {
                    if (typeof o.openedClass != 'undefined') {
                        openedClass = o.openedClass;
                    }
                    if (typeof o.closedClass != 'undefined') {
                        closedClass = o.closedClass;
                    }
                };

                //initialize each of the top levels
                var tree = $(this);
                tree.addClass("tree");
                tree.find('li').has("ul").each(function () {
                    var branch = $(this); //li with children ul
                    branch.prepend("<i class='indicator glyphicon " + closedClass + "'></i>");
                    branch.addClass('branch');
                    branch.on('click', function (e) {
                        if (this == e.target) {
                            var icon = $(this).children('i:first');
                            icon.toggleClass(openedClass + " " + closedClass);
                            $(this).children().children().toggle();
                        }
                    })
                    branch.children().children().toggle();
                });
                //fire event from the dynamically added icon
                tree.find('.branch .indicator').each(function () {
                    $(this).on('click', function () {
                        $(this).closest('li').click();
                    });
                });
                //fire event to open branch if the li contains an anchor instead of text
                tree.find('.branch>a').each(function () {
                    $(this).on('click', function (e) {
                        $(this).closest('li').click();
                        e.preventDefault();
                    });
                });
                //fire event to open branch if the li contains a button instead of text
                tree.find('.branch>button').each(function () {
                    $(this).on('click', function (e) {
                        $(this).closest('li').click();
                        e.preventDefault();
                    });
                });
            }
        });

        //Initialization of treeviews
        $('#tree2').treed({ openedClass: 'glyphicon-folder-open', closedClass: 'glyphicon-folder-close' });

        $(document).ready(function(){
            $("#remove-member").click(function(){
                var input = document.getElementById('membertoremove').value;
                $.ajax({
                    url: 'Project/RemoveMemberIfInProject',
                    type: 'POST',
                    contentType: 'application/json;',
                    data: JSON.stringify({ email: input, projectID: @Model.ID}),
                    success: function (valid)
                    {
                        if(valid)
                        {
                            //show that id is valid
                        }
                        else
                        {
                            //show that id is not valid
                        }
                    }
                });
            });

            $('#delete-file-button').on('click', function() {
                DeleteFile();
            });

            $('#file-item>a').on('click', function () {

                $('#file-item>a').each(function () {
                    $(this).css("color", "#369");
                });
                $(this).css('color', 'black');
                var ID = $(this).parent().attr('alt');
                documentID = ID;

                //return false;
            });

        });

    </script>
</body>

}