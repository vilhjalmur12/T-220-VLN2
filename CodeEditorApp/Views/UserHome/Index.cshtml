@using CodeEditorApp.Models.ViewModels
@model CodeEditorApp.Models.ViewModels.UserViewModel

@{
    Layout = "~/Views/UserHome/_Layout.cshtml";
    ViewBag.Title = "UserHomePage";
    ProjectViewModel NewProject = ViewBag.NewProject;
}
<body>
    <!--UserHome body starts-->
    <div class="row container padding-for-container userhome-body ">
        <div class="col-md-2 document-list box-container">
            @if (Model.RootFolder.Folders == null)
            {
                <p>Database is empty</p>
            }
            else
            {
                <ul id="tree2">
                    @foreach (CodeEditorApp.Models.ViewModels.FolderViewModel item in Model.RootFolder.Folders)
                    {
                        <li>
                            @if (item.IsSolutionFolder)
                            {
                                @Html.ActionLink(item.Name, "Index", "Project", new { projectID = @item.ProjectID }, null)
                            }
                            else
                            {
                                <a href="#">@item.Name</a>
                            }

                            @ShowSubItems(item.SubFolders);

                        </li>
                    }
                </ul>
            }

            @helper ShowSubItems(List<CodeEditorApp.Models.ViewModels.FolderViewModel> folders)
            { 
                <ul>
                    @foreach (CodeEditorApp.Models.ViewModels.FolderViewModel item in folders)
                    {
                        <li>
                            @if (item.IsSolutionFolder)
                            {
                                @Html.ActionLink(item.Name, "Index", "Project", new { projectID = @item.ProjectID }, null)
                            }
                            else
                            {
                                @item.Name
                            }

                            @ShowSubItems(item.SubFolders)

                            @if (item.Files != null)
                            {
                                <ul>
                                    @foreach (CodeEditorApp.Models.ViewModels.FileViewModel file in item.Files)
                                    {
                                        <li id="file-item" alt="@file.ID">
                                            <a>@file.name</a>
                                        </li>
                                    }
                                </ul>
                            }
                        </li>
                    }
                </ul>
            }
        </div>
        <div class="col-md-9 project-table box-container">
            <!-- Responsive table starts here -->
            <div class="table-responsive-vertical shadow-z-1">
                <!-- Table starts here -->
                <table id="table" class="table table-hover table-responsive">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Owner</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Projects)
                        {
                            <tr>
                                <td data-title="ID">1</td>
                                <td data-title="name-of-project">@Html.ActionLink(@item.name, "Index", "Project", new { projectID = @item.ID }, null)</td>
                                <td data-title="project-owner">@item.Owner</td>
                            </tr>
                        }                      
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-md-1 add-project box-container">
            <!-- Hér er CreateProject aðgerð -->
            <!-- Trigger the modal with a button -->
            <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">
                <i class="indicator glyphicon glyphicon-plus-sign"></i>
            </button>

            <!-- Modal -->
            <div id="myModal" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Modal Header</h4>
                        </div>
                        <div class="modal-body">
                            @{Html.RenderPartial("CreateProject", NewProject);}
                        </div>
                        <div class="modal-footer">
                            <button type = "button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!--UserHome body ends-->
</body>

@section Scripts {
    @Scripts.Render("~/Scripts/js_modal.js")
}