@using CodeEditorApp.Models.ViewModels
@model OpenProjectViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/UserHome/_Layout.cshtml";
    MembershipViewModel newMembership = ViewBag.newMembership;
    FileViewModel newFile = ViewBag.newFile;
    List<string> userList = new List<string>();
    List<string> contentList = new List<string>();
    foreach (CommentViewModel comment in  @Model.Comments)
    {
        userList.Add(comment.User);
        contentList.Add(comment.Content);
    }
    List<FolderViewModel> solutionFileList = new List<FolderViewModel>();
    solutionFileList.Add(Model.SolutionFolder);
    List<FileViewModel> AllFiles = ViewBag.AllSolutionFiles;
}

    @Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/Custom")
@Scripts.Render("~/bundles/bootstrap")
@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")
<head>

</head>
<script src="https://use.fontawesome.com/3e0cecfe87.js"></script>
<body onload="openNav('@ViewBag.tabMake')">
    <div id="myModal2" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Modal Header</h4>
                </div>
                <div class="modal-body">
                    @{Html.RenderPartial("AddMember", newMembership);}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div id="myModal3" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Modal Header</h4>
                </div>
                <div class="modal-body">
                    @{Html.RenderPartial("RemoveMember", newMembership);}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>



    <!--Project body starts-->
    <div class="row container padding-for-container project-body">

        <div class="col-md-2 document-list padding-for-container box-container">
            <div class="document-list-icons">
                <!-- Hér er CreateFile aðgerð -->
                <!-- Trigger the modal with a button -->
                <span id="new-file" class="clickable-icon"><i data-toggle="modal" data-target="#myModal" class="glyphicon glyphicon-file fa-2x" aria-hidden="true"><span class="hover-text">Create new file</span></i></span>
                <!-- Modal -->
                <div id="myModal" class="modal fade" role="dialog">
                    <div class="modal-dialog">

                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Modal Header</h4>
                            </div>
                            <div class="modal-body">
                                @{Html.RenderPartial("CreateFile", newFile);}
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Hér er Createfolder aðgerð -->
                <span class="clickable-icon"><i data-toggle="modal" data-target="#myModal" class="glyphicon glyphicon-folder-close fa-2x" aria-hidden="true"><span class="hover-text">Create new folder</span></i></span>
                <!-- Hér er Afrita aðgerð -->
                <span class="clickable-icon"><i data-toggle="modal" data-target="#myModal" class="glyphicon glyphicon-copy fa-2x" aria-hidden="true"><span class="hover-text">Copy</span></i></span>
                <!-- Hér er Niðurhals aðgerð -->
                <span class="clickable-icon"><i data-toggle="modal" data-target="#myModal" class="glyphicon glyphicon-download-alt fa-2x" aria-hidden="true"><span class="hover-text">Download????</span></i></span>
                <!-- Hér er Rusl aðgerð -->
                <span class="clickable-icon"><i data-toggle="modal" data-target="#myModal" class="glyphicon glyphicon-trash fa-2x" aria-hidden="true"><span class="hover-text">Delete</span></i></span>
                <!-- Fara til baka í verkefna listann -->
                <span id="go-to-project-list" class="clickable-icon"><i id="go-to-project-list-text" data-toggle="modal" data-target="#myModal" class="fa fa-arrow-up fa-2x" aria-hidden="true"><span class="hover-text">Go to my projects</span></i></span>
            </div>
            <!--TAKKI ENDAR-->
            <!--Project folders and file tree starts-->

            <ul id="tree2">
                <li>@Model.SolutionFolder.Name</li>

                @if (Model.SolutionFolder != null)
                {
                    @ShowSubItems(solutionFileList)
                }
            </ul>

            @helper ShowSubItems(List<CodeEditorApp.Models.ViewModels.FolderViewModel> folders)
            {
            <ul>

                @foreach (CodeEditorApp.Models.ViewModels.FolderViewModel item in folders)
                {
                    <li class="clickable-icon">
                        @item.Name
                        @ShowSubItems(item.SubFolders)

                        @if (item.Files != null)
                        {
                            <ul>
                                @foreach (CodeEditorApp.Models.ViewModels.FileViewModel file in item.Files)
                                {
                                    <li class="clickable-icon" id="file-item" alt="@file.ID">
                                        <a>@file.name</a>
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
            </ul>
}


        </div>
        <!--Project folders and file tree ends-->
        <!--File editor starts-->
        <div class="col-md-9 project-editor box-container ">
            <!--ViewBag for storing the project code-->
            <div class="ace-editor" id="editor">
                <!--
                @ViewBag.Code
                    -->
            </div>
            <div class="row padding-for-container">
                <div class="col-sm-1">
                    <span class="clickable-icon padding"><i onclick="ToggleColor()" class="glyphicon glyphicon-adjust fa-2x" aria-hidden="true"><span class="hover-text">Change color of editor</span></i></span>
                </div>
                <div class="col-sm-2" id="syntax">
                    <select class="btn border-box" id="SyntaxSelector" onchange="Syntax()">
                        <option value="JavaScript">JavaScript</option>
                        <option>Html</option>
                        <option>C#</option>
                        <option>Css</option>
                    </select>
                </div>
            </div>

            @section scripts
            {
                <script src="~/3rdparty/src/ace.js" type="text/javascript" charset="utf-8"></script>
                <script src="~/Scripts/jquery.signalR-2.2.1.js"></script>
                <script src="~/signalr/hubs"></script>

                @{

                }


                <script>

                //Get the DocumentID from the Controller class



                //Start the Ace editor
                var editor = ace.edit("editor");
                editor.setTheme("ace/theme/monokai");
                //Set the Editor in Javascript mode
                Syntax(documentType);
                //editor.getSession().setMode("ace/mode/javascript");
                //Changes the style of the editor
                function ToggleColor() {
                    if (editor.getTheme() == "ace/theme/monokai") {
                        editor.setTheme("ace/theme/xcode");
                    } else {
                        editor.setTheme("ace/theme/monokai");
                    }
                }


                function Syntax(str) {
                    // var e = document.getElementById("SyntaxSelector");
                    // var str = e.options[e.selectedIndex].text;
                    //alert(str);
                    if (str == ".js") {
                        editor.getSession().setMode("ace/mode/javascript");
                    } else if (str == ".html") {
                        editor.getSession().setMode("ace/mode/html");
                    } else if (str == ".cpp") {
                        editor.getSession().setMode("ace/mode/cplusplus");
                    } else if (str == ".css") {
                        editor.getSession().setMode("ace/mode/css");
                    }
                }


                function UpdateEditor (Content, syntax) {
                    editor.setValue(Content);
                    Syntax(syntax);
                }
                //Changes the syntax of the editor


                $("form").submit(function () {
                    $("#hidden_editor").val(editor.getSession().getValue());
                });
                //Get the name of signed in user
                var userName = @Html.Raw(Json.Encode(ViewBag.UserName));
                //Start the SignalR Hub
                var myHub1 = $.connection.myHub1;
                //Bool so we don't get stuck in a loop
                var silent = false;
                //What happens every time someone makes changes to a document with more than one user
                myHub1.client.onChange = function (changeData) {
                    console.log(changeData);
                    silent = true;
                    editor.getSession().getDocument().applyDelta(changeData);
                    myHub1.server.send($('#displayname').val(), $('#update').val());
                    silent = false;
                };
                //What happens after client sends data
                $.connection.hub.start().done(function () {
                    myHub1.server.joinDocument(documentID);
                    editor.on("change", function (obj) {
                        if(silent){
                            return;
                        }
                        //Sends the Object from Ace Editor(Position of change, what changed)
                        console.log(obj);
                        myHub1.server.onChange(obj, documentID);



                    });
                });

                </script>
                <script>
                    $(function () {
                        // Reference the auto-generated proxy for the hub.
                        var chat = $.connection.myHub1;

                        // Create a function that the hub can call back to display messages.
                        chat.client.addNewMessageToPage = function (name, message) {
                            // Add the message to the page.
                            $('#discussion1').replaceWith('<li><strong>' + htmlEncode(name)
                                + '</strong>: ' + htmlEncode(message) + '</li>');
                        };
                        //Set the name of the user
                        $('#displayname').val(userName);
                        //Set the message that displays on update
                        $('#update').val('Made the last change');
                        // Set initial focus to message input box.
                        //$('#message').focus();
                        // Start the connection.
                        $.connection.hub.start().done(function () {
                            //$('#sendmessage').click(function () {
                            //    // Call the Send method on the hub.
                            //    myHub1.server.send($('#displayname').val(), $('#message').val());
                            //    // Clear text box and reset focus for next comment.
                            //    $('#message').val('').focus();
                            //});
                        });
                    });
                    // This optional function html-encodes messages for display in the page.
                    function htmlEncode(value) {
                        var encodedValue = $('<div />').text(value).html();
                        return encodedValue;
                    }
                </script>
            }

            <div class="project-update">
                @*<p class="l-text-user">Updates</p>*@
                <input class="hover-user" type="hidden" id="displayname" />
                <input class="hover-user" type="hidden" id="update" />
                <ul class="hover-user" id="discussion1"></ul>
            </div>
        </div>
        <!--File editor ends-->
        <!--Pop-out nav start-->
        <div id="popout-nav" class="col-md-1 row">
            <!--Action nav starts -->
            <div class="light-background">
                <ul class="project-actions light-background dark-textcolor">
                    <li><span onclick="closeAllNavs()" class="clickable-icon"><i class="fa fa-code fa-3x" aria-hidden="true"></i></span></li>
                    <li><span onclick="openNav('project-chat');" class="clickable-icon"><i class="glyphicon glyphicon-comment fa-3x" aria-hidden="true"></i></span></li>
                    <li><span onclick="openNav('project-members');" class="clickable-icon"><i class="fa fa-users fa-3x" aria-hidden="true"></i></span></li>
                    <li><span onclick="openNav('project-goals')" class="clickable-icon"><i class="fa fa-check-square-o fa-3x" aria-hidden="true"></i></span></li>
                </ul>
            </div>
            <!--Action nav ends -->

            <div class="sidenav padding-for-container right-padding">
                <!--chat starts-->
                <div id="project-chat" class="sidenav padding-for-container right-padding light-background">

                    <div id="message-box" class="container box-container">
                        <div class="row">
                            <textarea class="col" id="message"></textarea>
                            <input class="col" type="button" id="sendmessage" value="" />
                        </div>
                        <input type="hidden" id="displayname" />
                        <div style="width:100%;height:95%;overflow:auto;">
                            <ul class="hover-user" id="discussion"></ul>
                        </div>
                    </div>
                    @section scriptsComment {
                        <!--Script references. -->
                        <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
                        <!--Reference the SignalR library. -->
                        <script src="~/Scripts/jquery.signalR-2.1.0.min.js"></script>
                        <!--Reference the autogenerated SignalR hub script. -->
                        <script src="~/signalr/hubs"></script>
                        <!--SignalR script to update the chat page and send messages.-->
                        <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            //var connected = false;
            @*var projectID = ToString(@Model.ID);*@
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(@Html.Raw(Json.Encode(ViewBag.UserName)));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    var content = $("#message").val();;
                    chat.server.send($('#displayname').val(), $('#message').val());
                    @*//var NestIdProject = @Model.ID;*@
                    //var url = "/Project/SaveComment?projectID=" + NestIdProject +  "&message=" + content;
                    //window.location.href = url


                    $.ajax({
                        type: 'POST',
                        url: '/Project/SaveComment', //can I send data to multiple url with same ajax call.
                        data: {
                            projectID : @Model.ID,
                            message : content,
                        },
                        success: function (data) {
                            $(".error_msg").text(data);
                        }
                    });

                    $('#message').val('').focus();

                    // Clear text box and reset focus for next comment.

                });
             });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
                        </script>
                    }

                </div>
                <!--chat ends-->
                <!--members starts-->
                <div id="project-members" class="sidenav padding-for-container light-background">
                    <div id="members" class="box-container">
                        <h3>Members</h3>
                        <span id="new-member" class="clickable-icon"><i data-toggle="modal" data-target="#myModal2" class="glyphicon glyphicon-file" aria-hidden="true"><span class="hover-text">Create new file</span></i></span>
                        <!-- Modal -->

                        <ul id="member-list">
                            <!--Display the list of members in a project if any-->
                            @if (Model.Members != null)
                            {

                                for (int i = 0; i < Model.Members.Count(); i++)
                                {
                                    UserViewModel user = Model.Members[i];
                                    var userID = user.ID;
                                    <li><span onclick="javascript:setMembershipID(userID)" id=@user.UserName class="clickable-icon"><i data-toggle="modal" data-target="#myModal3" class="glyphicon glyphicon-file" aria-hidden="true"><span class="hover-text">Remove user</span></i></span>@user.UserName</li>
                                }
                                /* foreach (CodeEditorApp.Models.ViewModels.UserViewModel user in Model.Members)
                                 {

                                     string userID = user.UserName;
                                     //SetMembershipID(userID, this)"

                                 }*/
                            }
                        </ul>
                    </div>
                    <script>
                        function setMembershipID(userID){
                            // var element = document.getElementById(userID).value;
                            @newMembership.AspNetUserID = userID;
                            /*var htmladd = '<i data-toggle="modal" data-target="#myModal3" class="glyphicon glyphicon-file" aria-hidden="true">';
                            htmladd = '</i>';
                            $('<li>').append(htmladd);*/
                         }
                    </script>

                    <script>
                        $(document).ready(function(){
                            $("#remove-member").click(function(){
                                var input = document.getElementById('membertoremove').value;
                                $.ajax({
                                    url: 'Project/RemoveMemberIfInProject',
                                    type: 'POST',
                                    contentType: 'application/json;',
                                    data: JSON.stringify({ email: input, projectID: @Model.ID}),
                                    success: function (valid)
                                    {
                                        if(valid)
                                        {
                                            //show that id is valid
                                        }
                                        else
                                        {
                                            //show that id is not valid
                                        }
                                    }
                                });
                            });

                            $('#file-item>a').on('click', function () {
                                $('#file-item>a').each(function () {
                                    $(this).css("color", "#369");
                                });
                                $(this).css('color', 'black');
                                var ID = $(this).parent().attr('alt');
                                console.log(ID);
                                $.ajax({
                                    url: "/Project/OpenFile",
                                    method: "POST",
                                    data: { fileID : ID },
                                    dataType: "json",
                                    //contentType: "application/json; charset=utf-8",
                                    beforeSend:function () {

                                    },
                                    success: function (responseData) {
                                        console.log(responseData);
                                        console.log(responseData.Content);
                                        UpdateEditor(responseData.Content, responseData.FileType.Extension);
                                    },

                                });
                                return false;
                            });

                        });
                    </script>
                    <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.</p>
                </div>
                <!--members end-->
                <!--goals starts-->
                <div id="project-goals" class="sidenav padding-for-container right-padding light-background">
                    <div id="goals" class="box-container">
                        <h3>Goals</h3>
                        <!-- Bæta við Goal -->
                        <span id="add-goal" class="clickable-icon"><i id="go-to-project-list-text" data-toggle="modal" data-target="#myModal" class="fa fa-arrow-up fa-2x" aria-hidden="true"><span class="hover-text">Go to my projects</span></i></span>

                        <dl>
                            @if (Model.Goals != null)
                            {
                                foreach (CodeEditorApp.Models.ViewModels.GoalViewModel goal in Model.Goals)
                                {
                                    <dt><input type="checkbox" checked=@goal.finished onchange="ChangeGoal(@goal.ID)" />@goal.name : @goal.description</dt>
                                    if (goal.objectives != null)
                                    {
                                        foreach (CodeEditorApp.Models.ViewModels.ObjectiveViewModel objective in goal.objectives)
                                        {
                                            <dd><input type="checkbox" checked=@objective.finished onchange="ChangeGoal(@objective.ID)" />@objective.name</dd>
                                        }
                                    }
                                }
                            }
                        </dl>
                    </div>
                </div>
                <!--goals ends-->
            </div>
            <!--Pop-out nav ends -->

        </div>
    </div>

    <!--Project body ends-->
    <script>
        /*þarf að færa*/
        function openNav(name) {
            document.getElementById(name).style.width = "500px";/* Set the width of the side navigation to 250px */
            if (name != "project-chat") {
                closeNav("project-chat");
            }
            if (name != "project-members") {
                closeNav("project-members");
            }
            if (name != "project-goals") {
                closeNav("project-goals");
            }
        }

        /* Set the width of the side navigation to 0 */
        function closeNav(name) {
            document.getElementById(name).style.width = "0";
        }

        function closeAllNavs() {
            closeNav("project-chat");
            closeNav("project-members");
            closeNav("project-goals");
        }

        function ChangeGoal(goalID) {

            $.ajax({
                type: 'POST',
                url: '/Project/ChangeGoal', //can I send data to multiple url with same ajax call.
                data: {
                    goalID: goalID,
                },
                success: function (data) {
                    $(".error_msg").text(data);
                }
            });
        }

        function ChangeObjective(objectiveID) {

            $.ajax({
                type: 'POST',
                url: '/Project/ChangeObjective', //can I send data to multiple url with same ajax call.
                data: {
                    objectvieID: objectiveID,
                },
                success: function (data) {
                    $(".error_msg").text(data);
                }
            });
        }


    </script>



</body>
@Scripts.Render("~/Scripts/js_modal.js")
<script>

</script>