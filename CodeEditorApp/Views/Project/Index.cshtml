@using CodeEditorApp.Models.ViewModels
@model OpenProjectViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/UserHome/_Layout.cshtml";
    FileViewModel newFile = ViewBag.newFile;
    List<FolderViewModel> solutionFileList = new List<FolderViewModel>();
    solutionFileList.Add(Model.SolutionFolder);
}
<head>

</head>
<script src="https://use.fontawesome.com/3e0cecfe87.js"></script>
<body>
    <!--Project body starts-->
    <div class="row container padding-for-container project-body">

        <div class="col-md-2 document-list padding-for-container box-container">
            <div class="col-md-1 add-project">
                <!-- Hér er CreateFile aðgerð -->
                <!-- Trigger the modal with a button -->
                <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">
                    <i class="indicator glyphicon glyphicon-plus-sign"></i>
                </button>

                <!-- Modal -->
                <div id="myModal" class="modal fade" role="dialog">
                    <div class="modal-dialog">

                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Modal Header</h4>
                            </div>
                            <div class="modal-body">
                                @{Html.RenderPartial("CreateFile", newFile);}
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--TAKKI ENDAR-->
            <!--Project folders and file tree starts-->
            <div>
                <ul id="tree2">


                    @if (Model.SolutionFolder != null)
                    {
                        <li>@Model.SolutionFolder.Name</li>

                        <ul>


                            @foreach (CodeEditorApp.Models.ViewModels.FolderViewModel item in Model.SolutionFolder.SubFolders)
                            {
                                <li>
                                    <a href="#">@item.Name</a>
                                    @ShowSubItems(item.SubFolders)

                                </li>
                            }
                        </ul>
                    }
                </ul>

                @helper ShowSubItems(List<CodeEditorApp.Models.ViewModels.FolderViewModel> folders)
                {
                <ul>

                    @foreach (CodeEditorApp.Models.ViewModels.FolderViewModel item in folders)
                    {
                        <li>
                            @item.Name
                            @ShowSubItems(item.SubFolders)

                            @if (item.Files != null)
                            {
                                <ul>
                                    @foreach (CodeEditorApp.Models.ViewModels.FileViewModel file in item.Files)
                                    {
                                        <li id="file-item" alt="@item.ID">
                                            <a>@file.name</a>
                                        </li>
                                    }
                                </ul>
                            }
                        </li>
                    }
                </ul>
}
            </div>
        </div>

        <!--Project folders and file tree ends-->
        <!--File editor starts-->
        <div class="col-md-9 project-editor box-container ">
            <!--ViewBag for storing the project code-->
            <div id="editor">
                <!--
                @ViewBag.Code
                    -->
            </div>
            <div id="color"><input type="button" value="Change Color" onclick="ToggleColor()" class="btn btn-btndefault" /></div>
            <div id="syntax">
                <select id="SyntaxSelector" onchange="Syntax()">
                    <option value="JavaScript">JavaScript</option>
                    <option>Html</option>
                    <option>C#</option>
                    <option>Css</option>
                </select>
            </div>


            @section scripts 
            {
                    <script src="~/3rdparty/src/ace.js" type="text/javascript" charset="utf-8"></script>
                    <script src="~/Scripts/jquery.signalR-2.2.1.js"></script>
                    <script src="~/signalr/hubs"></script>

                @{
                    FileViewModel InitFile = new FileViewModel();
                    if (@Model.SolutionFolder.Files.First().name == "Index")
                    {
                        InitFile = Model.SolutionFolder.Files.First();
                    }
                    else if (Model.SolutionFolder.Files.First().name == "Main")
                    {
                        InitFile = Model.SolutionFolder.Files.First();
                    } else
                    {
                        InitFile.Type = new CodeEditorApp.Models.Entities.FileType();
                        InitFile.Type.Name = "Html";

                    }
                }

           
            <script>

                //Get the DocumentID from the Controller class
                
                
                


                




                //Start the Ace editor
                var editor = ace.edit("editor");
                editor.setTheme("ace/theme/monokai");
                //Set the Editor in Javascript mode
                Syntax(documentType);
                //editor.getSession().setMode("ace/mode/javascript");
                //Changes the style of the editor
                function ToggleColor() {
                    if (editor.getTheme() == "ace/theme/monokai") {
                        editor.setTheme("ace/theme/xcode");
                    } else {
                        editor.setTheme("ace/theme/monokai");
                    }
                }
                //Changes the syntax of the editor
                function Syntax(str) {
                    // var e = document.getElementById("SyntaxSelector");
                    // var str = e.options[e.selectedIndex].text;
                    //alert(str);
                    if (str == "Javascript") {
                        editor.getSession().setMode("ace/mode/javascript");
                    } else if (str == "Html") {
                        editor.getSession().setMode("ace/mode/html");
                    } else if (str == "C++") {
                        editor.getSession().setMode("ace/mode/cplusplus");
                    } else if (str == "Css") {
                        editor.getSession().setMode("ace/mode/css");
                    }
                }

                $("form").submit(function () {
                    $("#hidden_editor").val(editor.getSession().getValue());
                });
                var userName = @Html.Raw(Json.Encode(ViewBag.UserName));
                //Start the SignalR Hub
                var myHub1 = $.connection.myHub1;
                //Bool so we don't get stuck in a loop
                var silent = false;
                //What happens every time someone makes changes to a document with more than one user
                myHub1.client.onChange = function (changeData) {
                    console.log(changeData);
                    silent = true;
                    editor.getSession().getDocument().applyDelta(changeData);
                    myHub1.server.send($('#displayname').val(), $('#update').val());
                    silent = false;
                };
                //What happens after client sends data
                $.connection.hub.start().done(function () {
                    myHub1.server.joinDocument(documentID);
                    editor.on("change", function (obj) {
                        if(silent){
                            return;
                        }
                        //Sends the Object from Ace Editor(Position of change, what changed)
                        console.log(obj);
                        myHub1.server.onChange(obj, documentID);



                    });
                });
                
            </script>
            <script>
                    $(function () {
                        // Reference the auto-generated proxy for the hub.
                        var chat = $.connection.myHub1;

                        // Create a function that the hub can call back to display messages.
                        chat.client.addNewMessageToPage = function (name, message) {
                            // Add the message to the page.
                            $('#discussion1').replaceWith('<li><strong>' + htmlEncode(name)
                                + '</strong>: ' + htmlEncode(message) +  '</li>');
                        };
                        //Set the name of the user
                        $('#displayname').val(userName);
                        //Set the message that displays on update
                        $('#update').val('Made the last change');
                        // Set initial focus to message input box.
                        //$('#message').focus();
                        // Start the connection.
                        $.connection.hub.start().done(function () {
                            //$('#sendmessage').click(function () {
                            //    // Call the Send method on the hub.
                            //    myHub1.server.send($('#displayname').val(), $('#message').val());
                            //    // Clear text box and reset focus for next comment.
                            //    $('#message').val('').focus();
                            //});
                        });
                    });
                    // This optional function html-encodes messages for display in the page.
                    function htmlEncode(value) {
                        var encodedValue = $('<div />').text(value).html();
                        return encodedValue;
                    }
            </script>
            }

            <div class="project-update">
                @*<p class="l-text-user">Updates</p>*@
                <input class="hover-user" type="hidden" id="displayname" />
                <input class="hover-user" type="hidden" id="update" />
                <ul class="hover-user" id="discussion1"></ul>
            </div>
        </div>
        <!--File editor ends-->
        <!--Pop-out nav start-->
        <div id="popout-nav" class="col-md-1 row">
            <!--Action nav starts -->
            <div class="light-background">
                <ul class="project-actions light-background">
                    <li><span onclick="closeAllNavs()" class="clickable-icon"><i class="fa fa-code fa-3x" aria-hidden="true"></i></span></li>
                    <li><span onclick="openNav('project-chat');" class="clickable-icon"><i class="glyphicon glyphicon-comment fa-3x" aria-hidden="true"></i></span></li>
                    <li><span onclick="openNav('project-members');" class="clickable-icon"><i class="fa fa-users fa-3x" aria-hidden="true"></i></span></li>
                    <li><span onclick="openNav('project-goals')" class="clickable-icon"><i class="fa fa-check-square-o fa-3x" aria-hidden="true"></i></span></li>
                </ul>
            </div>
            <!--Action nav ends -->

            <div class="sidenav padding-for-container right-padding">
                <!--chat starts-->
                <div id="project-chat" class="sidenav padding-for-container right-padding light-background">

                    <div id="message-box" class="container box-container">
                        <div class="row">
                            <textarea class="col" id="message"></textarea>
                            <input class="col" type="button" id="sendmessage" value="" />
                        </div>
                        <input type="hidden" id="displayname" />
                        <ul class="hover-user" id="discussion"></ul>
                    </div>
                    @section scriptsComment {
                    <!--Script references. -->
                    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
                    <!--Reference the SignalR library. -->
                    <script src="~/Scripts/jquery.signalR-2.1.0.min.js"></script>
                    <!--Reference the autogenerated SignalR hub script. -->
                    <script src="~/signalr/hubs"></script>
                    <!--SignalR script to update the chat page and send messages.-->
                    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(@Html.Raw(Json.Encode(ViewBag.UserName)));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
                    </script>
                    }

                </div>
                <!--chat ends-->
                <!--members starts-->
                <div id="project-members" class="sidenav padding-for-container light-background">
                    <div id="members" class="box-container">
                        <h3>Members</h3>
                        <ul id="member-list">
                            <!--Display the list of members in a project if any-->
                            @if (Model.Members != null)
                            {
                                foreach (CodeEditorApp.Models.ViewModels.UserViewModel user in Model.Members)
                                {
                                    <li>@user.UserName</li>
                                }
                            }
                        </ul>

                        <input type="text" id="myinputmember" name="myinputmember" placeholder="Add user: Email address..." />
                        <button id="add-member">Add new member</button>

                        <input type="text" id="membertoremove" name="membertoremove" placeholder="Remove user: Email address..." />
                        <button id="remove-member">Remove Member</button>
                    </div>
                        <script>
                            $(document).ready(function(){
                                $("#add-member").click(function(){
                                    var input = document.getElementById('myinputmember').value;
                                    $.ajax({
                                        url: 'Project/AddMemberIfExists',
                                        type: 'POST',
                                        contentType: 'application/json;',
                                        data: JSON.stringify({ email: input, projectID: @Model.ID}),
                                        success: function (valid)
                                        {
                                            if(valid) 
                                            {
                                                //show that id is valid
                                            } 
                                            else 
                                            {
                                                //show that id is not valid
                                            }
                                        }
                                    });
                                });
                            });
                        </script>
                    <script>
                        $(document).ready(function(){
                            $("#remove-member").click(function(){
                                var input = document.getElementById('membertoremove').value;
                                $.ajax({
                                    url: 'Project/RemoveMemberIfInProject',
                                    type: 'POST',
                                    contentType: 'application/json;',
                                    data: JSON.stringify({ email: input, projectID: @Model.ID}),
                                    success: function (valid)
                                    {
                                        if(valid) 
                                        {
                                            //show that id is valid
                                        } 
                                        else 
                                        {
                                            //show that id is not valid
                                        }
                                    }
                                });
                            });
                        });
                    </script>
                        <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.</p>
                    </div>
                <!--members end-->
                <!--goals starts-->
                <div id="project-goals" class="sidenav padding-for-container right-padding light-background">
                    <div id="goals" class="box-container">
                        <h3>Goals</h3>
                        <dl>
                            @if (Model.Goals != null)
                            {
                                foreach (CodeEditorApp.Models.ViewModels.GoalViewModel goal in Model.Goals)
                                {
                                    <dt><input type="checkbox" checked=@goal.finished onchange="ChangeGoal(@goal.ID)"/>@goal.name : @goal.description</dt>
                                    if (goal.objectives != null)
                                    {
                                        foreach (CodeEditorApp.Models.ViewModels.ObjectiveViewModel objective in goal.objectives)
                                        {
                                            <dd><input type="checkbox" checked=@objective.finished />@objective.name</dd>
                                        }
                                    }
                                }
                            }
                        </dl>
                </div>
            </div>
            <!--goals ends-->
        </div>
        <!--Pop-out nav ends -->

    </div>
            </div>

    <!--Project body ends-->
    <script>
/*þarf að færa*/
        function openNav(name) {
            document.getElementById(name).style.width = "500px";/* Set the width of the side navigation to 250px */
            if (name != "project-chat")
            {
                closeNav("project-chat");
            }
            if (name != "project-members")
            {
                closeNav("project-members");
            }
            if (name != "project-goals")
            {
                closeNav("project-goals");
            }
        }

        /* Set the width of the side navigation to 0 */
        function closeNav(name) {
            document.getElementById(name).style.width = "0";
        }

        function closeAllNavs()
        {
            closeNav("project-chat");
            closeNav("project-members");
            closeNav("project-goals");
        }
        
        // Setup for File-Code Editor
        
        
    </script>

   
   
</body>
@Scripts.Render("~/Scripts/js_modal.js")
<script>
    
</script>